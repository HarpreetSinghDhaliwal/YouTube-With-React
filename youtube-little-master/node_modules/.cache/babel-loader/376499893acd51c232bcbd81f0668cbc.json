{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport youtube from \"../api/youtube\"; // import {config} from \"../api/config\";\n\nconst useVideos = defaultSearchTerm => {\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\n  const search = async term => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: term,\n        part: \"snippet\",\n        maxResults: 5,\n        type: 'video',\n        key: config[\"youtube-api-key\"]\n      }\n    });\n    setVideos(response.data.items);\n  };\n\n  return [videos, search];\n};\n\nexport default useVideos;","map":{"version":3,"sources":["/Users/harpreetsingh/Documents/programming/webDevelopment/freelancing/youtube-little-master/src/hooks/useVideos.js"],"names":["useEffect","useState","youtube","useVideos","defaultSearchTerm","videos","setVideos","search","term","response","get","params","q","part","maxResults","type","key","config","data","items"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CACA;;AAGA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACH,iBAAD,CAAN;AACH,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIA,QAAMG,MAAM,GAAG,MAAMC,IAAN,IAAc;AACzB,UAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,CAAY,SAAZ,EAAuB;AAC1CC,MAAAA,MAAM,EAAE;AACJC,QAAAA,CAAC,EAAEJ,IADC;AAEJK,QAAAA,IAAI,EAAE,SAFF;AAGJC,QAAAA,UAAU,EAAE,CAHR;AAIJC,QAAAA,IAAI,EAAE,OAJF;AAKJC,QAAAA,GAAG,EAAEC,MAAM,CAAC,iBAAD;AALP;AADkC,KAAvB,CAAvB;AAUAX,IAAAA,SAAS,CAACG,QAAQ,CAACS,IAAT,CAAcC,KAAf,CAAT;AAEH,GAbD;;AAcA,SAAO,CAACd,MAAD,EAASE,MAAT,CAAP;AACH,CAtBD;;AAuBA,eAAeJ,SAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport youtube from \"../api/youtube\";\n// import {config} from \"../api/config\";\n\n\nconst useVideos = (defaultSearchTerm) => {\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        search(defaultSearchTerm)\n    }, [defaultSearchTerm])\n\n    const search = async term => {\n        const response = await youtube.get(\"/search\", {\n            params: {\n                q: term,\n                part: \"snippet\",\n                maxResults: 5,\n                type: 'video',\n                key: config[\"youtube-api-key\"]\n            }\n        });\n\n        setVideos(response.data.items);\n\n    }\n    return [videos, search];\n}\nexport default useVideos;\n"]},"metadata":{},"sourceType":"module"}