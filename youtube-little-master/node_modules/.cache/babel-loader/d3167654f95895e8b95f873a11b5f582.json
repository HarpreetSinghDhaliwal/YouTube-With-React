{"ast":null,"code":"var _jsxFileName = \"/Users/harpreetsingh/Documents/programming/webDevelopment/freelancing/youtube-little-master/src/components/VideoDetail.jsx\";\n// import React from 'react'\n// const VideoDetail = ({video}) => {\n//     if (!video) {\n//         return <div>Loading...</div>\n//     }\n//     const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\n//     prompt(videoSrc);\n//     return <div>\n//         <div className=\"ui embed\">\n//             <iframe title=\"Video Player\" src={videoSrc}/>\n//         </div>\n//         <div className=\"ui segment \">\n//             <h4 className=\"ui header\">\n//                 {video.snippet.title}\n//             </h4>\n//             {/* <p>{video.snippet.comments}</p> */}\n//             <p>{video.snippet.description}</p>\n//         </div>\n//         <div className=\"ui segment \">\n//             <h4 className=\"ui header\">\n//                 {video.snippet.title}\n//             </h4>\n//             {/* <p>{video.snippet.comments}</p> */}\n//             <p>{video.snippet.description}</p>\n//         </div>\n//     </div>\n// }\n// export default VideoDetail\nimport React, { useEffect, useState } from 'react';\nimport youtube from '../api/youtube';\nimport { config } from '../api/config';\n\nconst VideoDetail = ({\n  video\n}) => {\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    if (video) {\n      fetchComments(video.id.videoId);\n    }\n  }, [video]);\n\n  const fetchComments = async videoId => {\n    const response = await youtube.get('/commentThreads', {\n      params: {\n        videoId: videoId,\n        part: 'snippet',\n        maxResults: 10,\n        // You can adjust the number of comments you want to fetch\n        key: config['youtube-api-key']\n      }\n    });\n    setComments(response.data.items);\n  };\n\n  if (!video) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui embed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"Video Player\",\n    src: videoSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"ui header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, video.snippet.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, video.snippet.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"ui header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, comment.snippet.topLevelComment.snippet.textDisplay))))));\n};\n\nexport default VideoDetail;","map":{"version":3,"sources":["/Users/harpreetsingh/Documents/programming/webDevelopment/freelancing/youtube-little-master/src/components/VideoDetail.jsx"],"names":["React","useEffect","useState","youtube","config","VideoDetail","video","comments","setComments","fetchComments","id","videoId","response","get","params","part","maxResults","key","data","items","videoSrc","snippet","title","description","map","comment","topLevelComment","textDisplay"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAJ,EAAW;AACPG,MAAAA,aAAa,CAACH,KAAK,CAACI,EAAN,CAASC,OAAV,CAAb;AACH;AACJ,GAJQ,EAIN,CAACL,KAAD,CAJM,CAAT;;AAMA,QAAMG,aAAa,GAAG,MAAOE,OAAP,IAAmB;AACrC,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,GAAR,CAAY,iBAAZ,EAA+B;AAClDC,MAAAA,MAAM,EAAE;AACJH,QAAAA,OAAO,EAAEA,OADL;AAEJI,QAAAA,IAAI,EAAE,SAFF;AAGJC,QAAAA,UAAU,EAAE,EAHR;AAGY;AAChBC,QAAAA,GAAG,EAAEb,MAAM,CAAC,iBAAD;AAJP;AAD0C,KAA/B,CAAvB;AASAI,IAAAA,WAAW,CAACI,QAAQ,CAACM,IAAT,CAAcC,KAAf,CAAX;AACH,GAXD;;AAaA,MAAI,CAACb,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAED,QAAMc,QAAQ,GAAI,iCAAgCd,KAAK,CAACI,EAAN,CAASC,OAAQ,EAAnE;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,GAAG,EAAES,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Bd,KAAK,CAACe,OAAN,CAAcC,KAAzC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,KAAK,CAACe,OAAN,CAAcE,WAAlB,CAFJ,CAJJ,eAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,QAAQ,CAACiB,GAAT,CAAcC,OAAD,iBACV;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACf,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIe,OAAO,CAACJ,OAAR,CAAgBK,eAAhB,CAAgCL,OAAhC,CAAwCM,WAA5C,CADJ,CADH,CADL,CAFJ,CARJ,CADJ;AAqBH,CAjDD;;AAmDA,eAAetB,WAAf","sourcesContent":["// import React from 'react'\n\n// const VideoDetail = ({video}) => {\n//     if (!video) {\n//         return <div>Loading...</div>\n//     }\n//     const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\n//     prompt(videoSrc);\n//     return <div>\n//         <div className=\"ui embed\">\n//             <iframe title=\"Video Player\" src={videoSrc}/>\n//         </div>\n//         <div className=\"ui segment \">\n//             <h4 className=\"ui header\">\n//                 {video.snippet.title}\n//             </h4>\n//             {/* <p>{video.snippet.comments}</p> */}\n//             <p>{video.snippet.description}</p>\n           \n//         </div>\n//         <div className=\"ui segment \">\n//             <h4 className=\"ui header\">\n//                 {video.snippet.title}\n//             </h4>\n//             {/* <p>{video.snippet.comments}</p> */}\n//             <p>{video.snippet.description}</p>\n           \n//         </div>\n//     </div>\n// }\n// export default VideoDetail\nimport React, { useEffect, useState } from 'react';\nimport youtube from '../api/youtube';\nimport { config } from '../api/config';\n\nconst VideoDetail = ({ video }) => {\n    const [comments, setComments] = useState([]);\n\n    useEffect(() => {\n        if (video) {\n            fetchComments(video.id.videoId);\n        }\n    }, [video]);\n\n    const fetchComments = async (videoId) => {\n        const response = await youtube.get('/commentThreads', {\n            params: {\n                videoId: videoId,\n                part: 'snippet',\n                maxResults: 10, // You can adjust the number of comments you want to fetch\n                key: config['youtube-api-key'],\n            },\n        });\n\n        setComments(response.data.items);\n    };\n\n    if (!video) {\n        return <div>Loading...</div>;\n    }\n\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n    return (\n        <div>\n            <div className=\"ui embed\">\n                <iframe title=\"Video Player\" src={videoSrc} />\n            </div>\n            <div className=\"ui segment\">\n                <h4 className=\"ui header\">{video.snippet.title}</h4>\n                <p>{video.snippet.description}</p>\n            </div>\n            <div className=\"ui segment\">\n                <h4 className=\"ui header\">Comments</h4>\n                <ul>\n                    {comments.map((comment) => (\n                        <li key={comment.id}>\n                            <p>{comment.snippet.topLevelComment.snippet.textDisplay}</p>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default VideoDetail;\n"]},"metadata":{},"sourceType":"module"}